(global_decode_post
 (goal_TCC1 0
  (goal_TCC1-1 nil 3771693711
   ("" (prove-vc) (("" (grind) nil nil)) nil)
   ((nil application-judgement "below(m)" mod nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (rat_div_nzrat_is_rat application-judgement "rat" rationals nil)
    (even_plus_even_is_even application-judgement "even_int" integers
     nil)
    (to_uint32 const-decl "(is_uint32)" cint framac_wp)
    (mod const-decl "{k | abs(k) < abs(j)}" mod nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (is_uint32 const-decl "bool" cint framac_wp)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (posint_min application-judgement "{k: posint | k <= i AND k <= j}"
     real_defs nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (to_uint32_id formula-decl nil cint framac_wp)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields
       nil))
   nil (goal subtype "global_decode_post.x_3" "nonzero_integer")))
 (goal 0 (goal-1 nil 3771693712 ("" (prove-vc) nil nil) nil shostak)))

